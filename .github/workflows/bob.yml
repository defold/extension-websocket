name: Build with bob

on: [push]

env:
  FILENAME_VERSION: 'info.json'
  BUILD_SERVER: 'https://build.defold.com'

jobs:
  download_bob:
    runs-on: ubuntu-latest
    steps:
      - run: wget http://d.defold.com/stable/${{FILENAME_VERSION}}

      - name: Parse bob version
        id: defold_version
        uses: notiz-dev/github-action-json-property@release
        with:
            path: '${{FILENAME_VERSION}}'
            prop_path: 'sha1'

      - name: Set DEFOLD_VERSION
        uses: allenevans/set-env@v2.0.0
        with:
          DEFOLD_VERSION: '${{steps.defold_version.outputs.prop}}'
      - run: echo "Found version '${DEFOLD_VERSION}'"
      - run: wget http://d.defold.com/archive/stable/${DEFOLD_VERSION}/bob/bob.jar

      - name: Cache dependencies (upload)
        uses: actions/cache@v2
        with:
          path: bob.jar
          key: bob-${DEFOLD_VERSION}


  build_with_bob:
    needs: [download_bob]
    strategy:
      matrix:
        #platform: [armv7-android, armv7-darwin, x86_64-darwin, x86_64-win32, win32, x86_64-linux, js-web]
        platform: [x86_64-darwin]
    runs-on: ubuntu-latest
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11.0.2'
          java-package: jre

      - name: Cache dependencies (download)
        uses: actions/cache@v2
        with:
          path: |
            ${{FILENAME_VERSION}}
            bob.jar
          key: bob-${DEFOLD_VERSION}

      - run: java -jar bob.jar --version

#     build:
#       if: "!contains(github.event.head_commit.message, 'skip-ci')"
#       strategy:
#         matrix:
#           platform: [armv7-android, armv7-darwin, x86_64-darwin, x86_64-win32, win32, x86_64-linux, js-web]
#       runs-on: ubuntu-18.04
#       steps: [
#         { name: 'Checkout', uses: actions/checkout@v2, with: { ref: '${{env.BUILD_BRANCH}}' } },
#         { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
#         { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: '11.0.2' } },
#         { name: 'Install dependencies', run: 'ci/ci.sh install' },
#         {
#           name: 'Build engine',
#           if: (github.event_name == 'push') || (github.event_name == 'pull_request_target') || ((github.event_name == 'repository_dispatch') && (github.event.client_payload.skip_engine != true)),
#           run: 'ci/ci.sh --platform=${{ matrix.platform }} --archive --skip-tests --skip-builtins --skip-docs engine'
#         },
#         {
#          name: 'Notify if build status changed',
#          uses: homoluctus/slatify@master,
#          if: always(),
#          with: { type: '${{ job.status }}', job_name: '${{ job.status }}: platform: ${{ matrix.platform }}', channel: '#defold-alarms-build', url: '${{ secrets.SLACK_WEBHOOK }}',
#                  mention: 'here', mention_if: 'failure', commit: true, token: '${{ secrets.GITHUB_TOKEN_READONLY }}' }
#         }]


#   build-editor:
#     if: "!contains(github.event.head_commit.message, 'skip-ci')"
#     runs-on: ubuntu-18.04
#     steps: [
#       { name: 'Checkout', uses: actions/checkout@v2, with: { ref: '${{env.BUILD_BRANCH}}' } },
#       { name: 'Fetch tags', run: 'git fetch --depth=1 origin +refs/tags/*:refs/tags/*' },
#       { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
#       { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: '11.0.2' } },
#       { name: 'Install Leiningen', uses: DeLaGuardo/setup-clojure@master, with: { lein: 2.8.3 } },
#       {
#         name: 'Build editor',
#         run: 'ci/ci.sh build-editor'
#       },
#       {
#         name: 'Archive editor',
#         run: 'ci/ci.sh archive-editor'
#       }]

#   sign-editor-darwin:
#     if: "!contains(github.event.head_commit.message, 'skip-ci')"
#     needs: [build-editor]
#     runs-on: macOS-latest
#     strategy:
#       matrix:
#         platform: [x86_64-darwin]
#     steps: [
#       { name: 'Checkout', uses: actions/checkout@v2, with: { ref: '${{env.BUILD_BRANCH}}' } },
#       { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
#       { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: '11.0.2' } },
#       {
#         name: 'Download editor',
#         run: 'ci/ci.sh download-editor --platform=${{ matrix.platform }}'
#       },
#       {
#         name: 'Install dependencies',
#         run: 'ci/ci.sh --keychain-cert="${{env.MACOS_CERTIFICATE}}" --keychain-cert-pass="${{env.MACOS_CERTIFICATE_PASS}}" install'
#       },
#       {
#         name: 'Sign editor',
#         run: 'ci/ci.sh sign-editor --platform=${{ matrix.platform }}'
#       },
#       {
#         name: 'Notarize editor',
#         run: 'ci/ci.sh --notarization-username="${{env.NOTARIZATION_USERNAME}}" --notarization-password="${{env.NOTARIZATION_PASSWORD}}" --notarization-itc-provider="${{env.NOTARIZATION_ITC_PROVIDER}}" notarize-editor'
#       },
#       {
#         name: 'Archive editor',
#         run: 'ci/ci.sh archive-editor --platform=${{ matrix.platform }}'
#       }]

#   sign-editor-windows:
#     if: "!contains(github.event.head_commit.message, 'skip-ci')"
#     needs: [build-editor]
#     runs-on: windows-2016
#     strategy:
#       matrix:
#         platform: [x86_64-win32]
#     steps: [
#       { name: 'Checkout', uses: actions/checkout@v2, with: { ref: '${{env.BUILD_BRANCH}}' } },
#       { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
#       { name: 'Install Java', uses: actions/setup-java@v1, with: { java-version: '11.0.2' } },
#       {
#         name: 'Download editor',
#         shell: bash,
#         run: 'ci/ci.sh download-editor --platform=${{ matrix.platform }}'
#       },
#       {
#         name: 'Install dependencies',
#         shell: bash,
#         run: 'ci/ci.sh --windows-cert-b64="${{env.WINDOWS_CERTIFICATE}}" --windows-cert-pass="${{env.WINDOWS_CERTIFICATE_PASS}}" install'
#       },
#       {
#         name: 'Install ext dependencies',
#         shell: bash,
#         run: 'ci/ci.sh install_ext --platform=${{ matrix.platform }}'
#       },
#       {
#         name: 'Sign editor',
#         shell: bash,
#         run: 'ci/ci.sh sign-editor --windows-cert=./ci/windows_cert.pfx --windows-cert-pass=./ci/windows_cert.pass --platform=${{ matrix.platform }}'
#       },
#       {
#         name: 'Archive editor',
#         shell: bash,
#         run: 'ci/ci.sh archive-editor --platform=${{ matrix.platform }}'
#       }]

# # ---- RELEASE ------------------

#   release:
#     if: "!contains(github.event.head_commit.message, 'skip-ci')"
#     needs: [sign-editor-darwin, sign-editor-windows]
#     runs-on: ubuntu-18.04
#     steps: [
#       { name: 'Checkout', uses: actions/checkout@v2, with: { ref: '${{env.BUILD_BRANCH}}' } },
#       { name: 'Install Python', uses: actions/setup-python@v1, with: { python-version: 2.x, architecture: x64 } },
#       {
#         name: 'Release',
#         run: 'ci/ci.sh release'
#       }]
